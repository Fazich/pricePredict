c
c(1:100)
x <- c(1:100)
x
length(x)
clean
c(2:100)
y -< c(2:100)
y <- c(2:100)
y
rbind(x, y)
y <- c(2:101)
rbind(x,y)
x <- c(1,2,3)
y <- c(2,3,4)
rbind(x,y)
cbind(x,y)
data()
Titanic
women
plot(women)
qqnorm(women)
qqnorm(women$height, women$weight)
data
data()
quakes
plot(quakes)
long <- quakes$long
long
depth <- quakes$depth
mag <- quakes$depth
stations <- quakes$stations
quakesStatic <- data.frame(depth,stations,mag)
quakesStatic
quakesStatic <- data.frame(depth,long,stations,mag)
result <- lm(mag~depth+long+stations,data=quakesStatic)
reuslt
data.frame
data.frame(stations,mag)
quakesStatic <-data.frame(stations,mag)
plot(quakesStatic)
plot(quakes)
depth <- c(quakes$depth)
stations <- c(quakes$stations)
mag <- c(quakes$mag)
plot(stations, mag)
quakesStatic <- data.frame(depth, stations, mag)
plot(quakesStatic)
result <- lm(mag~1+depth+stations)
reuslt
result
summary(result)
quakesStatic <- data.frame(depth,long,stations,mag)
plot(quakesStatic)
result <- lm(mag~1+depth+long+stations)
result
summary(result)
result <- lm(mag~1+depth+long+stations,data=quakesStatic)
result
summary(result)
data()
ChickWeight
plot(ChickWeight)
result <- lm(weight~. data=ChickWeight)
result <- lm(weight~., data=ChickWeight)
summary(result)
reusltNew <- update(result,.~.,-Chick)
summary(resultNew)
summary(reusltNew)
reusltNew <- update(result,.~.,-Time)
summary(reusltNew)
quake
quakes
plot(quakes)
result <- lm(mag~., data=quakes)
summary(result)
resultNew <- update(result, .~., -long)
summary(resultNew)
?update()
lm.new <- update(result, . ~ . -long)
summary(lm.new)
lm.new <- update(result, . ~ . -lat)
summary(lm.new)
lm.new <- update(result, . ~ . -depth)
summary(lm.new)
summary(result)
lm.new <- update(result, . ~ . +mag*stations)
lm.new <- update(result, . ~ . +I(mag*stations)
;
lm.new <- update(result, . ~ . +I(mag*stations))
summary(lm.new)
lm.new2 <- update(lm.new, . ~ . +D(mag^2))
lm.new2 <- update(lm.new, . ~ . +I(mag^2))
summary(lm.new2)
lm.new3 <- update(lm.new2, . ~ . -long -depth)
summary(lm.new3)
lm.new4 <- update(lm.new3, . ~ . -lat)
summary(lm.new4)
lm.new <- update(result, .~. +I(staions^2))
lm.new <- update(result, .~. +I(stations^2))
summary(lm.new)
step()
?step()
step(lm.new)
step(lm.new)
lm.new
year <- c(1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011);
lm.new
lm.new
price <- c(3021,3176,3326,3659,4007,4989,6385,6698,8237,10292,13411,15800,19276,24595);
lmout<-lm(price~year+1);
lm.new <- update(lmout,.~.+I(year^2));
predict(lm.new,data.frame(year=2014))
predict(lm.new,data.frame(year=2014))
predict(lm.new,data.frame(year=2014))
predict(lm.new,data.frame(year=2014))
predict(lm.new,data.frame(year=2014))
lm.new
plot(year,price)
lines(year,exp(fitted(lm.new)))
lines(year,fitted(lm.new))
?lines()
lines(year,price)
plot(year,price)
lines(year,price)
plot(year,price)
lines(year,lm.new)
lines(year,fitted(lm.new))
?fitted()
summary(lm.new)
plot(lm.new)
step(lm.new)
predict(lm.new,data.frame(year=2015))
predict(lm.new,data.frame(year=2014))
install.packages(MINE)
123
install.packages('arules')
data <- data.frame(read.csv("dataEN.csv"));
# 寤虹珛澶氬厓绾挎€у洖褰?
lm <- lm(price~.,data=data);
# 鍘婚櫎骞寸郴鏁?
lm <- update(lm,price~.-year);
# 閫愭鍥炲綊
step(lm);
# 鏂板洖褰掓ā鍨?
lm.new <- step(lm);
# 鍘绘帀鏄捐憲鎬т笉鏄庢樉鐨勭郴鏁?
lm.price <- update(lm.new,price~.-graduate);
# Call:
# lm(formula = price ~ CPI + RPI + population + estateSum + completionArea,
#     data = data)
# Residuals:
#     Min      1Q  Median      3Q     Max
# -552.13 -318.41  -94.15  168.37  939.06
# Coefficients:
#                  Estimate Std. Error t value Pr(>|t|)
# (Intercept)    -3.502e+04  7.469e+03  -4.688 0.000857 ***
# CPI            -3.910e+01  1.911e+01  -2.046 0.067946 .
# RPI             7.248e+01  1.501e+01   4.829 0.000693 ***
# population      2.017e+01  2.373e+00   8.499 6.91e-06 ***
# estateSum       3.663e+00  9.741e-01   3.760 0.003723 **
# ---
# completionArea -1.190e+00  2.616e-01  -4.551 0.001057 **
# Signif. codes:  0 芒鈧??***芒鈧?? 0.001 芒鈧??**芒鈧?? 0.01 芒鈧??*芒鈧?? 0.05 芒鈧??.芒鈧?? 0.1 芒鈧?? 芒鈧?? 1
# Residual standard error: 551.5 on 10 degrees of freedom
# Multiple R-squared:  0.9967,	Adjusted R-squared:  0.995
# F-statistic: 599.4 on 5 and 10 DF,  p-value: 4.752e-12
# 鍗曚竴鍙橀噺棰勬祴
# 浜哄彛
year <- c(data$year);
population <- c(data$population);
lm.people <- lm(population~year);
plot(year,population);
lines(year,fitted(lm.people));
predict(lm.people,data.frame(year=2014))
#cpi
cpi <- c(data$CPI)
plot(year,cpi);
lm.cpi <- lm(dpi~year^2);
lines(year,fitted(lm.cpi));
lm.cpi <- update(lm.cpi,cpi~.+I(year^2));
plot(year,cpi);
lines(year,fitted(lm.cpi));
#rpi
rpi <- c(data$RPI);
plot(year,rpi)
lm.rpi <- lm(rpi~year)
lm.rpi <- update(lm.rpi,rpi~.+I(year^2))
lines(year,fitted(lm.rpi))
#estateSum
sum <- c(data$estateSum)
plot(year,sum)
lm.sum <- glm(sum~year)
lines(year,fitted(lm.sum))
m.sum <- update(lm.sum,sum~.+I(year^2))
plot(year,sum)
lines(year,fitted(lm.sum))
#area
area <- c(5068,3828,2970,2776,2913,2838,2698)
areaYear <- c(2007,2008,2009,2010,2011,2012,2013)
lm.area <- lm(area~areaYear)
lm.area <- update(lm.area,.~.+I(areaYear^2))
plot(areaYear,area)
lines(areaYear,fitted(lm.area))
#repeat
area <- data$completionArea
lm.price <- lm(price~cpi+rpi+population+sum+area)
summary(lm.price)
#simple predict
plot(year,price)
lm.round <- lm(price~year)
lm.round <- update(lm.round,.~.+I(year^2))
lines(year,fitted(lm.round))
predict(lm.round,data.frame(year=2014))
year <- c(data$year);
data <- data.frame(read.csv("dataEN.csv"));
data <- data.frame(read.csv("dataEN.csv"));
setwd("D:/statics/house")
data <- data.frame(read.csv("dataEN.csv"));
# 寤虹珛澶氬厓绾挎€у洖褰?
lm <- lm(price~.,data=data);
# 鍘婚櫎骞寸郴鏁?
lm <- update(lm,price~.-year);
# 閫愭鍥炲綊
step(lm);
# 鏂板洖褰掓ā鍨?
lm.new <- step(lm);
# 鍘绘帀鏄捐憲鎬т笉鏄庢樉鐨勭郴鏁?
lm.price <- update(lm.new,price~.-graduate);
# Call:
# lm(formula = price ~ CPI + RPI + population + estateSum + completionArea,
#     data = data)
# Residuals:
#     Min      1Q  Median      3Q     Max
# -552.13 -318.41  -94.15  168.37  939.06
# Coefficients:
#                  Estimate Std. Error t value Pr(>|t|)
# (Intercept)    -3.502e+04  7.469e+03  -4.688 0.000857 ***
# CPI            -3.910e+01  1.911e+01  -2.046 0.067946 .
# RPI             7.248e+01  1.501e+01   4.829 0.000693 ***
# population      2.017e+01  2.373e+00   8.499 6.91e-06 ***
# estateSum       3.663e+00  9.741e-01   3.760 0.003723 **
# completionArea -1.190e+00  2.616e-01  -4.551 0.001057 **
# ---
# Signif. codes:  0 芒鈧??***芒鈧?? 0.001 芒鈧??**芒鈧?? 0.01 芒鈧??*芒鈧?? 0.05 芒鈧??.芒鈧?? 0.1 芒鈧?? 芒鈧?? 1
# Residual standard error: 551.5 on 10 degrees of freedom
# Multiple R-squared:  0.9967,	Adjusted R-squared:  0.995
# F-statistic: 599.4 on 5 and 10 DF,  p-value: 4.752e-12
# 鍗曚竴鍙橀噺棰勬祴
# 浜哄彛
year <- c(data$year);
population <- c(data$population);
lm.people <- lm(population~year);
plot(year,population);
lines(year,fitted(lm.people));
predict(lm.people,data.frame(year=2014))
#cpi
cpi <- c(data$CPI)
plot(year,cpi);
lm.cpi <- lm(dpi~year^2);
lines(year,fitted(lm.cpi));
lm.cpi <- update(lm.cpi,cpi~.+I(year^2));
plot(year,cpi);
lines(year,fitted(lm.cpi));
#rpi
rpi <- c(data$RPI);
plot(year,rpi)
lm.rpi <- lm(rpi~year)
lm.rpi <- update(lm.rpi,rpi~.+I(year^2))
lines(year,fitted(lm.rpi))
#estateSum
sum <- c(data$estateSum)
plot(year,sum)
lm.sum <- glm(sum~year)
lines(year,fitted(lm.sum))
m.sum <- update(lm.sum,sum~.+I(year^2))
plot(year,sum)
lines(year,fitted(lm.sum))
#area
area <- c(5068,3828,2970,2776,2913,2838,2698)
areaYear <- c(2007,2008,2009,2010,2011,2012,2013)
lm.area <- lm(area~areaYear)
lm.area <- update(lm.area,.~.+I(areaYear^2))
plot(areaYear,area)
lines(areaYear,fitted(lm.area))
#repeat
area <- data$completionArea
lm.price <- lm(price~cpi+rpi+population+sum+area)
summary(lm.price)
#simple predict
plot(year,price)
lm.round <- lm(price~year)
lm.round <- update(lm.round,.~.+I(year^2))
lines(year,fitted(lm.round))
predict(lm.round,data.frame(year=2014))
lm.round <- lm(price~year)
plot(year,price)
year <- c(data$year)
plot(year,price)
price
yaer
year
plot(year,price)
data <- data.frame(read.csv("dataEN.csv"));
year <- c(data$year)
price
price <- c(data$price)
plot(year,price)
lm.round <- lm(price~year)
lm.round <- update(lm.round,.~.+I(year^2))
lines(year,fitted(lm.round))
predict(lm.round,data.frame(year=2014))
summary(lm.round)
format(lm.round)
summary(lm.round)
4.221e+08
-4.225e+05
1.057e+02
predict(lm.round,data.frame(year=2010))
2010*2010*105.7-422500*2010+422100000
2010*2010*105.7*105.7-422500*2010+422100000
2010*2010*105.7-422500*2010+422100000
?I()
4.221e+08
422100000-422500*2010
2010*2010*105.7
427038570-427125000
1.057e+02
105.7*2010*2010
4.225e+05
4.225e+05*2010
4.221e+08
422100000-849225000
427038570
summary(lm.round)
2010*-4.225e+05+2010*2010*1.057e+02
4.221e+08
422100000--422186430
422100000-422186430
fivenum(lm.round)
lm.round
lm.round$coeff
2010*-4.224943e+05+2010*2010*1.057234e+02+4.220981e+08
4.220981e+08
4.224943e+05
1.057234e+02
lm.price
lm.price$coefficients
